# Generated by Django 4.0.5 on 2022-06-12 17:59

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name="Category's name")),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categorys',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default=None, max_length=100, verbose_name='First name')),
                ('last_name', models.CharField(default=None, max_length=100, verbose_name='Last name')),
                ('phone', models.CharField(default=None, max_length=30, verbose_name='phone')),
                ('email', models.EmailField(default=None, max_length=254, verbose_name='Email')),
                ('password', models.CharField(max_length=255, verbose_name='Password')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name="Game's name")),
                ('price', models.IntegerField(default=0)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('content', models.TextField(blank=True, verbose_name='Description')),
                ('photo', models.ImageField(upload_to='photos/%Y/%m/%d/', verbose_name='Photo')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Time of creation')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Time of editing')),
                ('authorEmail', models.EmailField(default='xxx@gmail.com', max_length=255)),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='game_store.category', verbose_name='Category ID')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'ordering': ['name', 'time_create'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('address', models.CharField(default=None, max_length=100, verbose_name='Address')),
                ('phone', models.CharField(max_length=30, verbose_name='Phone')),
                ('date', models.DateTimeField(default=datetime.datetime.today, verbose_name='Date')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_store.customer', verbose_name='Customer id')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_store.game', verbose_name='Game id')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['customer'],
            },
        ),
    ]
